이번 글에서는 nslookup 명령과 동일한 기능을 수행하는 dig 명령어를 알아보자. 
nslookup은 윈도우에도 구현이 되어 있지만 dig명령어는 유닉스/리눅스/OSX(엑스가 아니라 텐이라고 읽자)에 기본으로 탑재되어 있다.

아무런 옵션을 주지 않고 dig를 실행시켜 보자.dig 명령어는 DNS 관련 기본 환경설정을 보여준다. 

<그림>

nslookup은 명령어를 입력하고 프롬프트 상태에서 명령어를 입력하였지만 dig는 CLI에 직접 옵션을 주고 명령을 실행한다. 
물론 nslookup도 dig와 같이 명령어 형태로 사용할 수 있지만 프롬프트 상태가 훨씬 사용하기 쉽다. 

dig -h를 입력하면 dig의 기본 사용법이 나온다. 

Usage:  dig [@global-server] [domain] [q-type] [q-class] {q-opt}
            {global-d-opt} host [@local-server] {local-d-opt}
            [ host [@local-server] {local-d-opt} [...]]

역시나 복잡해 보인다. 하지만 우리가 사용하는 옵션은 그렇게 많이 되지 않는다. 
[@global-server] 도메인 질의를 전송할 DNS 서버를 지정한다. 
[domain] 질의 대상 도메인 이름이다.
[q-type] 질의하는 쿼리타입이다. nslookup에서 사용했던 MX, A, PTR, SOA 등을 그대로 사용한다. 

이 세 옵션만을 사용해도 우리가 원하는 질의는 모두 진행할 수 있다. [@global-server]을 지정하지 않으면 네트워크 설정에서 지정한 DNS 서버로 질의한다.
사용법은 다음과 같다. 

dig [@네임서버] 도메인 [쿼리타입] 
dig @168.126.63.1 naver.com soa

dig 에서 조회 가능한 DNS 쿼리 타입은 아래의 항목들이다. 사실 쿼리타입은 nslookup이나 dig가 아니라 DNS 프로토콜에서 지정한 쿼리타입이다. 
두 명령어는 해당 항목을 조회하는 것이다. 

쿼리타입
a : 네트워크 주소
mx : 도메인의 메일 서버 주소
ns : 도메인의 권한 네임서버 정보
soa : 도메인 zone 파일 상단의 source of authority 레코드

본인이 관리하는 도메인이 있는가? 입력하여 반환되는 DNS 관련 정보를 확인해보자. 

dig @8.8.8.8 naver.com mx