이제까지 Bro가 생성하는 몇가지 로그에 대해서 살펴보았다. Bro는 이 외에도 많은 프로토콜을 분석하고 로그를 생성할 수 있다.

https://www.bro.org/sphinx/script-reference/log-files.html에서 bro가 생성할 수 있는 로그들을 찾을 수 있다. 

그렇다면 어떻게 이런 로그들을 활용할 수 있을까? Bro는 세션 기반으로 방대한 로그를 생성한다. Bro 스크립트를 이용하여 경보를 작성할 수도 있다.
하지만 bro의 진정한 힘은 빅데이터 기반 엔진과 구성함으로써 얻을 수 있다. 네트워크 프로토콜 분석은 사용자의 네트워크 사용 이력 로그를 생성한다는 의미이다.
그러므로 사용자들이 네트워크를 통하여 어떤 행위를 하는지 추적할 수 있다. 
간단한 예를 HTTP 로그에서 살펴보자. 
사용자는 웹 브라우저를 켜고 인터넷 사이트를 접속한다고 하자. 그런데 해당 웹사이트에 악성코드를 유포하는 사이트로 유도하는 iframe 코드나 redirect 코드가 숨겨있다면 어떻게 될까?
그렇게 되면 사용자는 인지하지 못하지만 네트워크에서는 다음과 같은 접속이 진행된다. 

1. 사용자가 웹사이트에 접속한다. 
2. 웹사이트는 사용자의 브라우저에게 html 태그로 이루어진 페이지를 전송한다. 
3. 사용자 웹브라우저는 html 태크를 해석하면서 브라우저에 생성한다.
4. 이때 iframe 태그가 있다면 브라우저는 iframe에 있는 페이지를 다시 접속해서 내용을 요청한다.
5. redirect 코드가 있다면 리다이렉트되는 페이지에 다시 접속을 요청하면서 페이지 내용을 요청한다.
6. 이제 최종 사이트에서 사용자 웹 브라우저로 파일이 전송되면서 세션을 종료한다. 

위의 단계는 bro의 http 로그에서 세 줄로 나타난다. 첫 번째 로그는 최초에 접속한 사이트에 대한 로그이다. 두 번째는 iframe에 명시된 사이트로 접속한 로그이다.
마지막 세 번째는 redirect 된 사이트로 접속한 로그이다. 그리고 세 번째 로그에는 첫 번째 접속한 사이트가 referrer로 기록된다. 
세 로그 모두 다른 uid를 가지고 있다. 하지만 동일한 출발지에서 매우 짧은 접속 시간 간격은 이 접속이 하나의 요청에서 시작된 네트워크 세션임을 알 수 있다. 
세 번째 로그는 사용자가 수신하는 상태코드가 301이나 302이므로 다른 페이지로 리다이렉트 된다는 것을 의미한다. 
이런 상세한 로그들은 일반적인 IDS나 방화벽에서는 추출하기 어려운 로그들이다. 그러므로 이런 정보를 추출하는 것만으로도 bro를 사용하는 이유는 충분하다.

또 한 가지 중요한 사실을 살펴보자. 이렇게 사용자의 네트워크 접속 기록을 모두 저장할 수 있다면 어떤 환경에서 사용해야 할지 고민하는 것이다.
Bro는 IDS(Intrusion Detection System)로 분류된다. 그러므로 정보 보안 목적으로 사용된다고 쉽게 생각할 수 있다. 
IT 인프라를 운영하면 대부분 방화벽을 기준으로 외부 네트워크와 내부 네트워크 구분한다. 즉, 방화벽을 인터넷과의 경계지점에 위치시키고 인터넷 망과 내부 업무망을 구분하는 것이다.
그리고 방화벽 외부, 즉 인터넷에서 관리대상 네트워크로 유입되는 통신을 내부행(Inbound) 통신이라고 한다. 그러면 반대인 관리대상 네트워크에서 인터넷으로 향하는 통신은 무엇이라고 할까? 
외부행(Outbound) 통신이라고 한다. 네트워크에 Bro IDS를 설치한다면 어떤 통신을 모니터링하는게 더 효과적일까? 
나는 Bro를 외부행(Outboud) 통신 모니터링을 위해서 사용할 것을 강력히 추천한다.
첫 번째, Bro의 네트워크 행위 분석은 사용자 정보와 결합할 때 강력한 힘을 발휘한다. 많은 기업 보안 담당자들은 내부 자산의 사용자를 파악하고 있다. 
즉, 자산의 IP, 호스트 이름, 소유자 등의 자산 관리 정보들을 관리하는 것이다. 사용자를 알고 사용자가 생성한 네트워크 통신 내역은 사용자별로 상이하다. 
설마 그럴까 생각하지만 정말로 상이하다. 물론 이런 특성을 이용해서 사용자를 감시하는 다른 용도로 사용하면 그건 보안의 범위를 넘어서는 것이다.
국내 마케팅을 전담하는 직원이 동유럽 국가 사이트를 지속적으로 방문한다던지, 아니면 대부분 직원이 회사에 없는 시간인 새벽에 활발하게 활동하는 등을 파악할 수 있는것이다.

두 번째, 내부 사용자를 중심으로 하는 네트워크 분석은 범위를 극명하게 축소시켜준다. 내부의 직원이 아무리 많아도 인터넷 IP 숫자보다 많지는 않다.
행여라도 내부 자산이 악성코드에 감염되어 내부망을 공격하더라도 내부 자산 중의 하나이다. 내부에 컴퓨터가 아무리 많아도 몇백, 몇 천대 수준이다.
인터넷 접속은 불특정 다수이므로 이보다 훨씬 많다. 더구나 인터넷에서의 공격은 IP 외에는 확인할 방법도 없으므로 내부를 분석대상으로 삼는 것이 방어자에게 상당히 유리하다.

세 번째, 개별화된 정보가 수집된다. 내부 자산을 사용하는 사용자는 개별적인 로그를 생성한다. 반면 웹서버 로그는 제한된 웹서버 자원을 요청한다. 
즉, 출발지 IP가 다르지만 접속 대상은 접속 대상인 웹서버 페이지는 늘 같다. 중복되고 반복된 로그가 많이 쌓이면 분석이 어려워진다. 
그리고 대부분 정상 접속인 로그를 저장하기 위해서 컴퓨팅 자원과 많은 저장 공간을 소모해야 한다.

이렇듯 bro가 가진 장점을 확실하게 하려면 내부의 자원을 모니터링하는 용도로 사용하는 것을 권고한다.
마지막으로 bro는 로그를 파일 형식으로 생성하지만 로그를 검색하는 웹 UI같은 프로그램은 제공하지 않는다. 그러므로 bro 로그는 전문 로그 관리 프로그램에서 분석하는 것이 좋다.
앞에서 빅데이터 기반 엔진과 구성하면 좋다라고 간단히 언급하였다. 최근에 오픈소스가 각광을 받고 있는 ELK(Elastic, Logstash, Kibana)에서 저장하고 분석하는 것도 좋은 방법이다.
RDBMS과 SQL에 익숙하다면 bro 로그를 MySQL에 입력해서 검색하는 방법도 있다. 어떤 방법이던지 사용자가 결과를 얻기에 가장 효율적인 방법을 사용하면 된다. 
이 글을 쓰는 필자는 Bro 로그를 Splunk로 가져와서 로그를 분석하고 있다. Splunk가 고가의 상용 시스템이지만 사내에서 운영중이고 충분한 라이센스가 있기 때문에 가능했다. 

이제 Bro를 어느정도 살펴보았으므로 Bro 로그를 Splunk에 적재하고 이를 분석해서 이상징후를 찾는 자체 Splunk App for Bro SIEM을 만들어 보자.