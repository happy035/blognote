이번 글에서는 tripwire 사용법을 살펴보자. 

초기 DB생성 (tripwire초기화)
tripwire --init

마지막점검 결과를 저장하고 있던 DB를 초기화한다. 설치 단계에서 설정하였던 local key passphrase를 입력한다. 

시스템 점검을 위해 파일 무결성 검사를 실시한다. 
tripwire --check

미리 설정한 tw.pol 정책에 기반하여 모니터링 대상 파일들의 무결성을 확인하여 보고서를 만든다. 
결과보고서는 /var/lib/tripwire/report/에 저장되며 파일이름은 “실행 날짜.twr”로 저장된다. 

생성된 결과보고서는 전용 프로그램으로만 읽을 수 있다.  다음의 명령어를 사용해서 읽는다.  
twprint -m r --twrfile 파일명

보고서 마지막 줄에 Total violations found: 0이라는 의미는 보안 문제가 없다는 뜻이다. 

DB 갱신

생성한 데이터베이스를 업데이트할 경우가 발생할 수 있다. 파일 신규 생성, 삭제 그리고 수정이 여기에 해당된다.  데이터베이스 갱신은 정책파일 갱신과는 다른 개념이다. 즉, 보호대상 디렉토리, 파일 목록은 그대로이지만 내용이 변경된 경우에 데이터베이스의 설정값과 다를 수 있다. 
이 경우 Tripwire는 파일 변경을 감지하고 오류를 발생시킨다. 정상적으로 시스템이 변경된 경우라면 데이터베이스를 업데이트 해야 한다.
tripwire --update 또는 tripwire -m u
정책파일 갱신
정책 파일은 데이터베이스를 생성하는 정책을 포함하는 파일이다. 정책파일이 변경되는 경우는 감시대상의 추가, 생성 그리고 삭제 등이 발생하는 경우를 가리킨다.  기존의 정책과 비교하여 새로운 정책에 대한 정보를 업데이트 하므로 정책 파일 자체를 재 초기화 하지 않아도 된다. 하지만 정책 파일이 갱신되면 이를 검사할 전체 데이터베이스를 업데이트해야 한다. 그래야 업데이트한 정책이 데이터베이스에 반영되기 때문이다. 
tripwire --update-policy 파일명 또는 tripwire -m p 파일명

초기 정책에 기반해서 보고서를 생성해 보았다. 이제 감시 대상 파일을 변경했을 때 tripwire는 어떻게 탐지하는지 살펴보자.  정책 파일을 복사해서 새로운 파일을 생성해보자. 
sudo cp /etc/tripwire/twpol.txt /etc/tripwire/twpol_backup.txt

sudo tripwire --check
검사 완료 후 생성한 보고서를 읽어보자. 
sudo twprint -m r --twrfile /var/lib/tripwire/report/ubuntu-20180726-215007.twr 
보고서 파일명은 실습하는 사용자마다 다르다는 점을 알아야 한다. 앞서 말했듯이 보고서는 날짜와 시간의 조합으로 파일명을 생성한다. 




보고서를 보면 두 가지 규칙 위반을 탐지하였다고 보고하고 있다. 
첫 번째는 추가된 오브젝트로 신규 생성된 twpol_backup.txt를 찾아내었다. 
두 번째로는 변경된 오브젝트인데 /etc/tripwire 디렉토리를 탐지하였다. 이것은 이 디렉토리에 파일이 신규 생성되면서 디렉토리의 내용이 변경되었다는 의미이다. 

이것으로 관리자는 시스템 변경 내역을 추적할 수 있다. 조금 더 정확하게 추적하려면 변경에 대한 추적 시스템이 필요하다.  즉, 변경을 일으키는 시스템 작업을 사전에 통보받고 변경작업이 발생한 즉시 정책 파일과 데이터베이스를 같이 변경해서 탐지 오류를 방지해야 한다. 그렇지 않으면 관리자 정상 작업도 모두 시스템 변경으로 보고해서 보안담당자의 피로도가 증가할 것이다.

Tripwire는 변경을 추적하는 보안도구다. 솔직히 변경추적만 훌륭하게 대응해도 보안사고를 미연에 방지할 수 있다. 하지만 변경은 비교시점을 지정하고 이후를 비교하는 것이다. 보통 비교대상이 되는 기준 지점을 스냅샷이라는 용어를 사용하기도 한다. 그러므로 시스템 변경시에 항상 스냅샷을 같이 변경해서 최신 상태로 변경 추적을 실행해야 한다. 이래저래 쉬운 일은 결코 아니다. 하지만 특별한 보안 기법보다 꾸준히 감시하는 것이 가장 확실한 방어대책이다. 
변경은 주기적으로 검사해야 한다. 하지만 지금까지의 설명은 tripwire --check와 같이 관리자가 수작업으로 검사하였다. 이때 tripwire --check 명령어를 실행시키는 bash 스크립트를 작성하고 이를 CRON에 등록하면 주기적인 검사를 실시할 수 있다.