1편에 이어서 UFW 설정을 더 살펴보자. 

포트 범위를 허용하기
사용하는 포트가 1개라면 1편의 방식을 이용할 수 있다. 하지만 운영하는 프로그램이 포트를 범위로 사용하는 경우가 있다. 
즉 5000/TCP에서 5500/TCP를 사용한다는 말이다. 한 줄씩 정책을 수립하면 500줄의 허용정책을 입력해야 하는데 이런 비효율을 적용할 수는 없다. 
ufw에서는 포트를 범위로 개방하는 명령어를 제공한다. 다음과 같이 사용할 수 있다. 

$sudo ufw allow 5000:5500/tcp
$sudo ufw allow 5000:5500/udp

정책이 적용되면 TCP와 UDP 포트 5000~5500까지 접속이 허용된다. 

특정 주소에서 접속하기
지금까지는 접속 포트로만 접근통제 정책을 적용했다. 이제 IP 기반의 접속을 설정해보자. 방화벽에서 사용할 수 있는 IP 정책은 출발지 기반과 목적지 기반 정책을 사용할 수 있다.
출발지 IP를 지정하려면 from 이라는 키워드를 사용한다. 

$sudo ufw allow from 10.10.100.100

특정 주소 범위에서 접속하기
포트 범위만 필요한 것이 아니라 IP 주소 범위도 접속에 많이 사용된다. 주소범위는 서브넷을 이용해서 설정한다. 

$sudo ufw allow from 10.10.100.10/24

위의 명령은 10.10.100.1~10.10.100.254까지의 IP에서 접근하는 것을 허용한다. 서브넷으로 지정이 어려운 2-3개의 IP는 개별 규칙을 만들어야 한다.

특정 주소로 접속하기
출발지가 아니라 목적지를 제어해야 하는 경우도 있다. 특정 출발지에서 특정 목적지만을 허용하는 경우는 키워드 to를 사용한다. 
10.10.10.100 출발지에서 10.100.100.100 목적지로 모든 포트를 허용하는 명령어는 다음과 같다. 

$sudo ufw enable from 10.10.10.100 to 10.100.100.100

상세하게 제어하기
지금까지 사용했던 모든 명령어는 조합이 가능하다. 그러므로 이제 네트워크를 상세하게 제어할 수 있다. 

$sudo ufw allow from 10.10.10.100 to 10.100.100.100 port 80 proto tcp
$sudo ufw allow from 10.10.10.100 to 10.100.100.100 port 1521 proto tcp

이 두 규칙이 무엇을 의미하는지 이제 충분히 이해가 갈 것이다. 

규칙 제거하기
추가된 규칙은 지속적으로 적용이 된다. 하지만 해당 서버가 제거되었거나. IP가 변경된 경우는 규칙을 수정하거나 제거해야 하는 경우가 발생한다. 
UFW는 규칙의 수정을 지원하지 않는다. 그러므로 제거하고 새로 추가해야 한다. 규칙을 제거하는 명령어는 delete이다. 

$sudo ufw delete [number]

삭제해야 할 규칙 번호는 다음과 같이 얻을 수 있다. 

$sudo ufw status numbered

상태: 활성

     목적                         동작          출발
     --                         --          --
[ 1] 25/tcp                     ALLOW IN    Anywhere                  
[ 2] 53/udp                     ALLOW IN    Anywhere                  
[ 3] 53/tcp                     ALLOW IN    Anywhere                  
[ 4] 443/tcp                    ALLOW IN    Anywhere                  
[ 5] 10.0.0.200 7000            ALLOW IN    10.0.0.100                
[ 6] 10.100.100.100 80/tcp      ALLOW IN    10.10.10.100              
[ 7] 25/tcp (v6)                ALLOW IN    Anywhere (v6)             
[ 8] 53/udp (v6)                ALLOW IN    Anywhere (v6)             
[ 9] 53/tcp (v6)                ALLOW IN    Anywhere (v6)             
[10] 443/tcp (v6)               ALLOW IN    Anywhere (v6)

이제 각 규칙 번호를 알았다. 마지막의 10번을 지워보자. 

$sudo ufw delete 10
삭제합니다:
 allow 443/tcp
이 작업과 함께 진행하시겠습니까(y|n)? 

y를 누르면 규칙이 지워진다. 이후 규칙을 다시 살펴보자. 

$sudo ufw status numbered
상태: 활성

     목적                         동작          출발
     --                         --          --
[ 1] 25/tcp                     ALLOW IN    Anywhere                  
[ 2] 53/udp                     ALLOW IN    Anywhere                  
[ 3] 53/tcp                     ALLOW IN    Anywhere                  
[ 4] 443/tcp                    ALLOW IN    Anywhere                  
[ 5] 10.0.0.200 7000            ALLOW IN    10.0.0.100                
[ 6] 10.100.100.100 80/tcp      ALLOW IN    10.10.10.100              
[ 7] 25/tcp (v6)                ALLOW IN    Anywhere (v6)             
[ 8] 53/udp (v6)                ALLOW IN    Anywhere (v6)             
[ 9] 53/tcp (v6)                ALLOW IN    Anywhere (v6)  

이제 규칙이 9개만 남은 것을 확인할 수 있다. 
규칙이 너무 복잡해서 기존 것을 모두 지우고 새로 시작하고 싶을때는 어떻게 해야 할까? 많은 규칙을 일일히 delete로 지우는 것은 매우 귀찮은 일이다. 
ufw는 reset 명령어를 지원하므로 다음과 같이 사용할 수 있다. 

$sudo ufw reset
모든 규칙을 설치된 기본 설정으로 초기화를 합니다. 이 작업과 함께 진행하시겠습니까(y|n)? 

y를 눌러서 제거하면 규칙을 백업하고 방화벽을 비활성으로 바꾼다. 

ufw는 사용법이 정말 단순하지만 효과는 매우 크다. 리눅스를 운영하는 담당자라면 ufw를 적극적으로 사용하는 것을 권고한다.
