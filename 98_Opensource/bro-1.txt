 Bro IDS

Bro는 IDS라고 얘기를 하기도 하지만 네트워크 트래픽 분석도구로 더 많이 사용된다. 
Bro는 네트워크 인터페이스에서 직접 패킷을 수집하여 네트워크 활동을 기록한 아스키 형식의 텍스트 로그파일들을 제공한다.
로그에는 모든 네트워크 연결의 상세 기록뿐만 아니라, 프로토콜 별 활동 내역을 정보를 제공한다. 
HTTP,DNS, Telent, FTP, SSH 등 어플리케이션 계층 접속 정보를 제공하므로 관리자들에게 상당히 고급정보를 제공한다. 
또한, Bro는  Bro script를 이용해 트래픽 분석 플랫폼을 사용자가 정의하고 확장할 수 있다. script는 어떠한 유형의 활동을 감지할 때 수행할 조치를 나타낼 수 있다. 
이를 이용해 실시간 경보를 생성할 수 있고, 요청에 따라 임의의 외부 프로그램을 실행할 수도 있다. 또한 트래픽 분석으로 얻은 정보는 악성 트래픽을 탐지하기 위한 시그니쳐로 활용될 수 있다.
이런 일련의 과정으로 Bro는 모든 트래픽을 검사하여 의심스러운 활동이 있는지 확인하는 보안 모니터로서 활용될 수 있다. 

Bro 프로그램은 오픈소스로 제공된다. 하지만 어떠한 상용프로그램보다 강력한 패킷 처리 기능을 보유하고 있다.
공식 홈페이지는 https://www.bro.org이며, 최신 버전의 프로그램과 설치, 사용방법 등의 문서를 제공한다.
기본적으로 *nix 계열에서 동작하므로 리눅스, 유닉스, FreeBSD 그리고 Mac OS 등에서 무리없이 동작한다.
Bro 홈페이지에 따르면 Bro를 운영함으로써 관리자는 다음을 얻을 수 있다. 

적용성(Adaptable)
Bro의 도메인 별 스크립팅은 사이트별 특화된 모니터링 정책을 수립을 가능하게 한다.

효율성(Efficient)
Bro는 고성능 네트워크를 목표로 하며 다양하고 거대한 네트워크 운영에 사용된다.

유연성 (Flexible)
Bro는 특정 탐지 기법에 제한을 받지 않으며 전통적인 시그니처 탐지 방식에 의존하지도 않는다. 
Bro is not restricted to any particular detection approach and does not rely on traditional signatures.

포렌식 (Forensics)
Bro는 Bro가 본 것을 상세하게 로깅을 하며 네트워크 행위에 대한 고수준(high-level)의 묶음 정보를 제공한다.

상세 분석 (In-depth Analysis)
Bro는 많은 프로토톨을 위한 분석기를 제공하고 있으며 어플리케이션 계층의 의미기반 분석을 가능하게 한다.

상태 추적 (Highly Stateful)
Bro는 네트워크 모니터링에서 광범위한 어플리케이션 계층 상태를 보여준다.

개방형 인터페이스 (Open Interfaces)
Bro는 실시간 정보 교환을 위해서 다른 어플리케이션과 상호작용한다.

오픈 소스 (Open Source)
Bro는 BSD 라이센스로 제공되며 제약이 없는 무료 사용이 허가되어 있다.
(출처 : https://www.bro.org)


Bro 설치하기

Bro는 패키지 관리 프로그램에서 바이너리 형식으로 설치하는 방법과 소스코드를 다운로드 받아서 컴파일하는 방법이 있다.
바이너리 보다는 소스코드를 내려받아서 컴파일하는 것을 권고한다. 다양한 운영체제에 설치가 가능하지만 여기에서는 Ubuntu Linux에 설치하자.
필자가 제일 좋아하는 배포판이고 지원도 잘되는 것이 장점이다. 당연한 말이지만 먼저 Ubuntu 리눅스를 설치해야 한다.

Ubuntu는 데비안 리눅스 배포판을 기본으로 하기 때문에 모든 명령어는 Debian 계열과 호환된다. 
프로그램을 설치하기 이전에 Bro가 사용하는 라이브러리를 먼저 설치해야 한다. 보통 종속 라이브러리라고 표현한다. 
다음의 명령어를 이용해서 프로그램 이전에 종속 라이브러리를 먼저 설치한다. 

sudo apt-get install cmake make gcc g++ flex bison libpcap-dev libssl-dev python-dev swig zlib1g-dev

종속 라이브러리 설치를 완료하면 이제 프로그램을 설치한다. Bro 웹 사이트에서 소스코드를 다운로드 할 수 있다. 

https://www.bro.org/downloads/bro-2.5.4.tar.gz

GitHub에서 clone으로 Bro 소스코드를 내려받을 수도 있다. 

git clone --recursive git://git.bro.org/bro

git으로 내려받은 코드는 압축이 해제되어 있지만 사이트에서 내려받기로 한 소스코드는 압축파일 형식으로 저장되어 있다. 
노파심에 적는 글이지만 해당 파일의 압축을 해제하는 명령은 다음과 같다. 

tar xvzf bro-2.5.4.tar.gz

압축을 해제하고 컴파일을 실행한다. Bro 소스코드 컴파일하려면 Makefile이 필요하다. Makefile은 소스코드 들을 어떻게 컴파일을 할것인지를 적용한 설계도라고 할 수 있다.
그리고 운영체제의 종속성 역시 Makefile에 명시되어 있다. 문제는 컴파일러, 32/64비트 환경 등 다양한 운영체제의 설정을 Makefile에 담기 어렵다는 것이다.
이 문제를 해결하기 위해 Makefile을 환경에 맞춰서 생성해주는 configure 명령어가 존재한다.
그러므로 대부분의 오픈소스 컴파일은 다음의 절차를 따른다. 

./configure  // 운영체제의 환경을 검사하여 Makefile을 생성해준다.
make        // Makefile을 읽어들어서 프로그램을 컴파일한다.
make install // 생성된 프로그램을 운영체제에 설치한다.

make install 과정에서는 root 권한이 필요할 수도 있다. 설치대상 디렉토리가 관리자 권한이 필요한 경우이다. 
위의 모든 절차를 root 계정에서 실행한다면 상관없지만 말이다. 
오픈소스 대부분의 설치 위치는 /usr/local/<프로그램명>에 설치된다. 설치 위치를 지정하고 싶다면 prefix 옵션을 사용한다. 
bro를 /opt에 설치하고 홈 디렉토리를 /opt/bro로 만들고 싶다면 configure 단계에서 다음과 같이 위치를 지정해야 한다.

./configure --prefix=/opt/bro

실제 설치과정은 다음의 명령어들을 순서대로 입력한다. 사용자 계정에서 명령을 실행하기 때문에 install 단계에서 sudo를 사용했다.

./configure --prefix=/opt/bro
make
sudo make install

컴파일 오류가 발생하는 많은 이유는 종속 라이브러리를 찾을 수 없는 경우이거나 최신 버전과 충돌이 발생하기 때문이다. 
오류 메시지를 찾아서 해당 라이브러리를 업그레이드하는 방식으로 문제를 해결할 수 있다.

설치가 완료되면 /opt/bro 디렉토리로 이동해서 전체 목록을 확인한다. 특별한 오류가 없다면 정상 설치가 된것이다.
다음 편에는 실행 방법 및 기본 사용방법을 살펴보자.  