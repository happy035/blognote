오랫만에 오픈소스 부분을 업데이트한다. 
난 오픈소스 개발자들을 존경한다. 아무런 연고도 없는 그들이 수고해준 덕분에 좋은 프로그램들을 잘 사용하고 있다. 실제 업무에도 많은 도움이 된다. 
오늘 살펴볼 프로그램은 보안 도구중에서도 가장 기본적인 방화벽(침입차단시스템)을 알아보자. 

방화벽은 접근통제의 대표적인 프로그램이다. 물론 방화벽만이 접근통제를 수행하는 것은 아니다. 넓은 의미로는 파일 암호화 역시 접근통제의 한 분야라고 봐도 된다.
암호를 풀 수 있는 사람만이 내용을 볼 수 있기 때문이다. 이렇듯 접근통제는 보안의 가장 기본 분야이다. 접근통제를 완성하기 위해 주체와 객체간의 권한 개념이 필요하다.
주체에게 권한을 주기 위해서는 사용자를 확인하는 인증이 또 필요하다. 

방화벽이 네트워크 기반 보안장비이기 때문에 네트워크 접근통제를 수행한다. 그러므로 네트워크에서 활용한 정보를 접근통제 정책에 사용한다. 
네트워크 패킷에 존재하고 접근통제에 적용하는 패킷 정보는 다음과 같다. 

출발지 IP, 출발지 포트
목적지 IP, 목적지 포트

하지만 이중 출발지 포트는 사용자가 임의로 지정하지 않으므로 대부분 활용하지 않는다. 그러므로 출발지 IP, 목적지 IP, 목적지 포트만이 실제적으로 사용된다.
여기에 부가적인 정보로 프로토콜을 지정할 수 있다. 우리가 사용하는 이더넷 기반의 LAN에서는 TCP, UDP, ICMP외에는 보이지 않아야 정상이다. 
방화벽의 접근통제 규칙은 이런 정보를 이용해서 설정한다. 가장 기본적인 규칙 구조는 다음과 같다. 

출발지IP -> 목적지IP, 목적지 포트, 프로토콜, 허용/차단

출발지에서 목적지IP의 포트로 가는 패킷을 차단할 것인지 허용할 것인지를 지정하는 것이다. 방화벽은 패시브(Passive)장비로 분류된다. 
즉, IDS와 같이 능동적으로 탐지하는 것이 아니라 지정된 규칙에 의해서만 동작하는 수동적 행위 장비라는 의미이다. 
이 말은 대단히 중요한 의미를 갖게 되는데 그 이유는 관리자에 있다. 지정된 규칙에 의해서 수동적으로 동작한다는 것은 생성된 규칙에 의해서 방화벽 보안 수준이 결정된다는 뜻이다.
그러므로 관리자가 똑똑하면 방화벽도 같이 똑똑해진다. 관리자가 초보자라면 방화벽도 보안 초보의 장비가 되는 것이다.
아쉽게도 방화벽은 냉장고처럼 가만히 놓아두어도 잘 운영되는 장비가 아니다. 비단 방화벽 뿐만이 아니다. 
보안장비는 훌륭한 관리자와 함께해야 제 성능을 발휘할 수 있는 것이다. 

이전까지 오픈소스 방화벽의 대표는 리눅스에서 동작하는 iptables였다. Ubuntu는 iptables보다 사용이 간편한 UFW를 방화벽으로 제공한다.
UFW는 위에서 언급한 방화벽 보안 정책 구조만 이해하면 쉽게 사용할 수 있다.  UFW는 Ubuntu 리눅스에 기본으로 설치되어 있다. 

그럴리는 없겠지만 UFW가 없다면 다음의 명령어를 이용해서 설치한다. 

$sudo apt install UFW가

설치완료 후 상태를 점검한다. 

$sudo ufw status verbose
상태: 비활성

아직 실행이 되지 않았다. 방화벽을 실행시켜보자. 

$sudo ufw enable

기본 상태를 차단(deny)으로 변경한다. 이 명령을 실행하면 들어오는 패킷은 기본으로 차단하고 나가는 패킷은 기본으로 허용한다. 

$sudo ufw default deny
$sudo ufw status verbose

상태: 활성
로깅: on (low)
기본 설정: deny (내부로 들어옴), allow (외부로 나감), disabled (라우팅 된)

ufw를 기본으로 사용하면 네트워크 방화벽이라기 보다는 호스트 방화벽이라고 보는 편이 더 낫다. 즉,명령을 실행하는 서버가 목적지로 자동 할당되기 때문이다. 
해당 서버에 SSH 서비스를 실행중이고 SSH를 이용한 원격접속을 허용한다면 다음과 같이 입력한다. 

$sudo ufw allow ssh 또는 $sudo ufw allow 22/TCP

SSH라는 응용 프로그램 이름을 사용해도 되고, SSH가 사용하는 22/TCP를 명시해도 동일한 효과를 얻을 수 있다. 
이렇듯 응용 프로그램의 포트번호는 프로토콜과 결합하여 사용하는 것이 더 명확하고 좋다.

가장 기본적인 포트 접속 허용을 알아보았다.  다음에는 조금 더 고급 옵션을 살펴볼 것이다. 
