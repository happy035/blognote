데이터 수집 구성 방안

분석 대상인 데이터를 수집하는 방안도 구축전 고려대상이다. 
여러 곳에서 데이터를 수집하는 다중 수집 방법과 한곳에서 수집하는 단일 지점 수집 방법이 고려대상이 된다.

다중 지점 수집은 데이터를 생산하는 주체들이 데이터를 통합하는 중간 프로그램에 전송하고 해당 프로그램은 색인 시스템으로 전송하는 방식을 취한다.  이 방식은 내부에서 운영하는 응용 프로그램이 생산하는 데이터를 전송할 때 유용한 방식이다. 즉, DNS 서버는 DNS 관련 데이터를 생성하고, 메일서버는 메일, 웹서버는 웹 접속 로그를 생성하기 때문에 데이터의 의미를 부여하기 위해 개별적으로 데이터를 수집한다. 선택적으로 중간 로그 수집기를 사용하지 않아도 된다. 
장점

•이해하기 용이하다. 
•개념적으로 단순하게 구축이 가능하다. 
•네트워크 가시성을 필요하지 않는다. 

단점
•시스템 관리에 시간이 많이 소요된다. 
•당신이 아는 것만 수집이 가능하다 
•어플리케이션별로 수집을 해야 한다. 
•서비스 설정이 생각보다 자주 변경된다. 
•어플리케이션 관리자의 승낙을 받기 어렵다. 
•모든 로그 형식들이 동일하지 않다.


￼ 

[[그림 ##]]는 단일 지점 수집 구성을 보여준다. 단일지점은 네트워크 센서를 이용해서 흐르는 트래픽을 기반으로 로그를 생성하고 이를 색인시스템으로 전송한다. 네트워크 센서는 프로토콜 분석까지 수행해서 데이터를 생성한다. 그러므로 네트워크 센서는 L7 계층까지 분석하는 기능이 반드시 제공되어야 한다. 오픈소스인 Bro IDS는 이 기능에 가장 충실한 프로그램 중 하나이다. Bro는 네트워크 트래픽을 입력받아 응용 프로토콜의 헤더까지 분석해서 데이터를 프로토콜 별로 생성한다. 
앞서 다중 지점 수집이 DNS 서버, 메일서버, 웹 서버와 같은 응용 서버에서 로그를 수집했다면, Bro를 네트워크 센서로 사용한다면 Bro 프로그램 하나만 가지고도 DNS, SMTP, HTTP를 모두 분석할 수 있어 관리자의 입장에서는 대단히 편리하다고 할 수 있다. 네트워크 센서를 설치하려면 네트워크의 구성을 변경해야 하는 경우도 발생할 수 있다. 이 책에서 예제로 사용하는 데이터의 대부분은 Bro가 생성한 데이터이다.

장점
•당신이 모르는 시스템 로그가 생성된다.
•다수의 어플리케이션 로그가 단일 소스에서 생성
•로그 형식이 동일하다.
•로그를 위해서 서비스를 변경할 필요가 없다.

단점
•네트워크 가시성을 이해해야 한다.
•추가 서버가 필요할 수 있다. 
•네트워크 가시성은 복잡도를 증가시킨다.
•네트워크 가시성을 위해서 시스템별 권한 사용을 고려해야 한다.
