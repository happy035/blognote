오늘은 다중 선택을 살펴보자. 
다중 선택은 드롭다운과 매우 유사하지만 여러개의 값을 선택할 수 있다는 점이 드롭다운과 가장 큰 차이이다.

다중 선택 컨트롤

어제와 동일한 방식으로 드롭다운 컨트롤을 다중선택으로 변경하자. 

1. 대시보드 편집 모드를 연다. 
2. 드롭다운 컨트롤의 연필 아이콘을 클릭한다. 
3. 팝업창에서 다중선택을 선택한다.
4. 기본값과 초기값은 그대로 놓아둔다.
5. 적용을 눌러서 컨트롤 변경을 완료한다. 

변경이 완료되면 다음과 같이 보인다. 드롭다운과는 다른 화면을 보여준다. 입력창에서 마우스를 클릭해보자.
드롭다운 컨트롤에 마지막으로 저장한 값은 동적 옵션이다. 그러므로 상태코드의 값들을 추출하여 목록으로 보여준다. 
현재 200이 기본으로 선택되어 있는데 목록에서 아무값이나 한 개를 더 선택해보자. 이제 화면과 같이 두 가지 값이 설정된다. 
입력한 값을 지우려면 선택값 옆의 x 버튼을 클릭하면 제거할 수 있다. 
이렇게 선택하고 제출버튼을 클릭해서 데이터를 검색해보자. 

첫 번째 패널에서 "결과를 찾을 수 없습니다" 라는 메시지를 반환할 것이다. 왜 값을 선택했는데 결과가 없을까? 
Splunk가 결과를 찾을 수 없다는 것은 여러가지 원인이 있지만 대부분 다음과 같다. 

1. 주어진 시간 범위에 실제 데이터가 없는 것이다. 시간 범위를 늘려야 한다.
2. 검색어를 잘못 작성해서 검색결과가 나오지 않는 것이다. 
3. 대소문자를 구분하지 못해서 그럴 수도 있다. AND, OR, NOT 등은 반드시 대문자로 작성하고 필드명은 대소문자를 구분한다. IP, ip는 다른 필드이다.

결론부터 말하면 이 경우는 두 번째이다. 검색어를 잘못 작성한 것이다. 첫 번째 패널의 검색어는 다음과 같다.

index=book sourcetype="access_combined_wcookie" status=$stat_code$
| stats count(clientip) by date_mday
| sort date_mday

앞서 설명했듯이 입력 컨트롤 값으로 들어오는 값은 토큰 변수로 변환된다. 그림에서 입력값은 200, 408, 404이다. 
이것을 검색어에 대입하면 실제로 동작하는 검색어를 추출할 수 있다. 

index=book sourcetype="access_combined_wcookie" status=200 408 404
| stats count(clientip) by date_mday
| sort date_mday

위의 검색이 사용자의 입력을 받아서 Splunk가 실행하는 검색이다. 검색을 실행시킨 사용자의 의도는 무엇이었을까? 
상태코드가 200 이거나 408이거나 404인 데이터를 얻기를 바랬을 것이다. 
하지만 위의 검색코드는 상태코드가 200이며(status=200) 데이터에 408과 404가 포함된 데이터를 찾으려고 시도한다.
Splunk에서 단어 사이의 공백은 AND 조건으로 동작한다. 그렇기 때문에 검색이 제대로 동작하지 않는 것이다.
그렇다면 이렇게 다중선택에서는 어떻게 검색을 해야 할까? 다중 선택은 몇 개의 데이터가 입력으로 올지 알 수 없다. 
초기 검색인 status=$stat_code$와 같이 단일 값을 입력받는 검색어는 사용할 수 없다.
우선 입력컨트롤을 수정해보자. 

토큰옵션으로 이동하면 구분자라는 입력창을 찾을 수 있다.

구분자는 여러개의 값을 입력할 때 값을 구분할 때 사용하는 델리미터(delimiter)역할을 한다. 
이 경우에 status 코드는 입력값과 비교되며 여러개의 값을 동시에 만족시켜야 한다. 이 조건은 OR 연산자의 기능이다.
Splunk에서 하나의 변수에 여러개의 값을 OR 조건으로 검색하는 연사자로는 "|"이 있다. 구분자에 |을 입력한다. 
구분자 앞에 공백이 없어야 한다. Splunk는 공백까지도 구분자로 인식하기 대문에 앞뒤로 공백을 넣으면 검색에서 오류가 발생할 수 있다.
여러개의 구분자를 필드와 비교하는 함수로는 match()가 있다. match 함수는 인자를 두개 받으며 첫 번째 인자는 비교대상 필드를, 두 번째 인자는 비교하는 값을 입력받는다.
함수는 다음과 같이 사용한다. status 필드가 사용자가 입력하는 $stat_code$와 같은지를 비교하고 맞는 경우 검색 결과를 반환한다.

match(status,"$stat_code$")

다중선택에서 500계열인 500, 503, 505를 선택해보자.  구분자를 "|"로 설정했으므로 $stat_code$에 할당된 값은 500|503|505이다.
이 값은 그대로 $stat_code$를 대체하므로 match 함수에서는 다음과 같이 변환된다. 

match(status,"500|503|505")

이렇게하면 동작할까? 애석하게도 해당 검색은 동작하지 않는다. Splunk는 따옴표 안에 있는 "500|503|505"을 선택이 아닌 문자열로 인식한다.
그러므로 세 값중에 하나라도 맞으면 검색 이벤트를 반환하라는 의미로 저 문자열을 괄호()로 감싸주어야 한다. 괄호는 두 가지 방법으로 넣을 수 있다. 
첫 번째는 검색어에서 직접 추가하는 방식이다. match(status,"($stat_code$)")
두 번째로는 토큰 옵션에서 접두사와 접미사에 각각 (과 )을 넣는 것이다. 

두 방식 모두 동일한 검색결과를 반환한다. 사용자의 선택에 맞춰서 사용하면 된다. 
이로써 다중 선택 컨트를을 살펴보았다. 다중 선택과 같이 동시에 1개 이상의 값을 사용하라면 이 기법을 사용해야 한다. 
체크박스 역시 동시에 여러개의 값을 선택할 수 있으므로 이와 동일한 방식을 적용할 수 있다.
다음에는 다른 입력컨트롤을 살펴보도록 하자. 