오늘 살펴볼 내용은 "이 대시보드에 있는 토큰 관리" 메뉴다. 
지금까지 드딜 다운은 클릭할 경우 다른 페이지를 열어서 새로운 검색을 실행시키는 것이 기본이었다. 
그러나 가끔 동일한 대시보드 페이지에서 다른 패널에 상세 데이터를 보고 싶은 경우도 있을 것이다. 
브라우저의 새 탭으로 데이터를 보게되면 페이지를 이동하면서 보아야 하고 동시에 비교가 되지 않는 단점도 있기 때문이다.
대시보드에 있는 토큰 관리는 패널에 발생한 이벤트를 다른 패널로 전송하여 새로운 데이터를 보여주는 역할을 수행하다. 
부제가 "페이지 내 드릴다운 작업 활성화"인 것을 보면 사용자들도 어떤 기능인지 어느정도 이해할 수 있을 것이다. 
사용방법은 드릴 다운과 거의 동일하다. 

작성한 500계열 오류 패널에 드릴 다운을 설정해보자. 드릴 다운에서 "이 대시보드에 있는 토큰 관리"를 선택하자. 
선택하면 다른 선택사항들보다 조금 복잡한 화면이 나타난다. 사용자는 설정, 평가, 설정 해제를 고를 수 있다.
먼저 설정을 알아보자. 설정이 기본값이며, 이것은 토큰과 토큰 값을 신규로 생성한다는 뜻이다. 
선택항목의 오른쪽에 있는 두 입력칸에서 첫 번째는 토큰, 두 번째는 토큰에 들어갈 실제 값이다. 
여기에서 말하는 토큰은 Splunk 검색에서 사용하는 필드와 유사한 개념이다. 
필자가 입력한 d_status는 상태코드를 나타내는 토큰으로 임으로 설정한 것이다. 
기존 필드명과 동일하게 하면 혼선을 일으킬 수 있어서 접두어로 구분하였다. 하지만 실제 값은 상태코드의 값과 동일하다.
두 번째는 토큰에 할당될 값을 지정하는데 상황에 맞추어 여러 방식으로 지정할 수 있다. 
어떤 값이 필요한지는 대시보드를 만드는 사용자가 제일 잘 알것이다. 가장 많이 사용하는 방식은 click을 한 항목값이다. 
이것은 $click.value2$이다. 이전글에서도 이 값을 사용하였다. 사실 이 값은 클릭한 셀의 값을 얻어내는 특수 변수인 것이다.
$click.name2$는 클릭한 셀의 필드명을 반환한다. 필드명을 반환한다는 것을 이해하기 전에 필드명에 대해서 먼저 알아보자. 

index=book sourcetype="access_combined_wcookie" status="5*" 
| stats sum(bytes) by clientip 

위의 검색어는 필드가 clientip와 sum(byte)라는 필드명으로 검색결과가 다음과 같이 생성된다.

11_3.png

그런데 이런 필드명을 처음 보는 사람들은 필드명만 보고 데이터를 이해하기 어려울 수도 있다. 
데이터를 보는 일반 사용자들의 이해를 돕고자 필드명을 변경해보자. rename 명령어를 사용하면 필드명을 변경할 수 있다.

index=book sourcetype="access_combined_wcookie" status="5*" 
| stats sum(bytes) by clientip | rename sum(bytes) as "Total Bytes", clientip as "Source IP"

필드명은 다음과 같이 원하는 형식으로 변경된다. 
11_4.png

필드명을 이해했으므로 $click.name2$를 이해할 차례이다. rename 명령어로 필드명을 변경한 후에 $click.name2$을 사용하면 변경한 필드명이 반환된다. 
이게 문제가 되는 이유는 변경한 필드명이 실제 데이터에 존재하지 않는 필드명이므로 검색에 사용할 수 없기 때문이다.
그러므로 대시보드에서는 가급적 rename 명령어를 이용해서 필드명을 변경하지 않아야 한다.

드릴다운은 패널에서 클릭한 경우에 새로운 토큰을 생성하고 토큰에 값을 전달한다. 그렇다면 이 토큰을 받아서 데이터를 보여주는 별도의 패널이 존재해야 한다.
예제를 위해서 패널을 추가해 보자. 

1. Drill down연습 대시보드를 편집 모드로 만든다.
2. 패널 추가를 선택하고 새로만들기를 선택한다.
3. Line Chart를 선택한다. 시간범위는 전체 시간으로 선택하고 검색은 다음을 입력한다.
index=book sourcetype="access_combined_wcookie" status="$d_status$"
| chart count over action by status
4. 대시보드에 추가 버튼을 클릭해서 새 패널 추가를 마친다.

새로 추가된 패널에는 "검색에서 입력을 기다리는 중"이라는 문구가 나타난다. 검색에서 status="$d_status$" 항목이 있었다.
$d_status$ 토큰이 아직 생성되지 않았기 때문에 이 검색을 실행시킬 수 없다는 뜻이다. 대시보드 전체를 저장하고 일반 모드로 돌아온다.
이제 500계열 오류 패널에서 상태코드를 선택하자.  필자가 503을 선택하지 아래 창에 다음과 같이 라인 차트가 그려졌다. 
500이나 505를 선택해도 라인차트는 동작한다. 
패널에서 선택한 값이 동일한 대시보드에서 다른 패널로 전달되고 이에 해당하는 상세 정보를 표시할 수 있다는 점이 "이 대시보드에 있는 토큰 관리"의 가장 큰 장점이다.

이제까지의 드릴다운을 클릭한 셀의 값이 직접 검색 필드에 연결되어 있어서 검색어를 작성하기가 쉬웠다. 이런 경우는 주로 데이터가 테이블 형식일때 가능한 방법이다.
두 번째 패널로 만든 라인 차트를 살펴보자. 라인 차트는 사용자들의 어떤 액션에서 오류가 발생한지를 보여주는 차트이다.
그림을 보면 view에서 많은 오류가 발생하고 있다. 이런 차트에서도 드릴 다운을 할 수 있을까? 
드릴 다운도 하나의 검색이라는 것을 명심해야 한다. 그러므로 클릭했을 때 클릭한 곳의 토큰 값을 설정해서 다른 패널에 인자 형식으로 전달하면 드릴 다운이 가능하다.

두 번째 패널인 라인차트를 살펴보자. X축의 값은 사용자의 액션이고 Y축 값은 상태코드이다. 그림에서 remove 액션은 25값을 가지고 있다. 
만일 remove 액션에서 오류를 발생시킨 25개 항목의 출발지 IP 목록을 보는 드릴 다운을 작성해보자. 
드릴 다운을 이용해서 얻는 데이터는 다음의 조건을 만족해야 한다. 

액션=X축_필드명  상태코드=Y축_필드명

그러면 값이 아닌 필드명은 어떻게 얻을 수 있을까? 두 번째 패널의 드릴 다운을 설정해보자. 

1. Edit drill down을 선택하고, "이 대시보드에 있는 토큰 관리"를 선택한다.
2. 첫 번째 설정에서 토큰 이름을 d_action, 토큰 값은 $click.value$를 선택한다.
3. 두 번째 설정에서 토큰 이름을 d_status, 토큰 값은 $click.name2$를 선택한다.
4. 적용을 눌러서 빠져나온다. 

두 번재 패널 드릴 다운에 맞는 세 번째 패널 역시 만들어야 한다.

 1. 패널 추가를 선택하고 새로 만들기를 선택한다. 
 2. Statistics Table을 선택한다. 시간범위는 전체 시간으로 선택하고 검색은 다음을 입력한다. 
 index=book sourcetype="access_combined_wcookie" status="$d_status$" action="$d_action$" 
 | top showperc=f useother=t limit=9 clientip
 3. 대시보드에 추가 버튼을 클릭해서 새 패널 추가를 마친다.

두 번째 패널의 드릴 다운을 설명해보자. 두 개의 토큰을 새로 만드는 것은 이제 쉽게 이해할 수 있을 것이다. 
그런데  d_action 토큰에 할당하는 값은 왜 $click.value$일까? $click.value$는 X축의 필드값이다. $click.name$은 X축의 범주값이다. 
범주와 필드값은 무엇인가? 범주는 Splunk 필드명이고 필드값은 필드에 들어가있는 값들의 목록이다. 
두 번재 패널에서 $click.name$은 "action"이라는 필드명이고 $click.value$는 사용자가 선택하는 실제 값이다. 
동일한 방식으로 $click.name2$와  $click.value2$가 있다. 이것은 Y축의 필드값과 계산값이다. 
그러므로 사용자가 라인 차트에서 remove 필드의 25값을 클릭할 때 할당되는 변수값들은 다음과 같다. 

$click.name$ ==> "action"
$click.value$ ==> "remove"
$click.name2$ == > "505"
$click.value2$ ==> "25"

이 내용을 가지고 검색어를 만들어보자. 우리가 원하는 것은 action=remove이고 상태코드가 505인 값들의 목록이다.
그러므로 아래와 같이 토큰을 만들고 토큰값을 설정해야 한다. 


이제 패널이 3개인 대시보드가 완성되었다. 그리고 각각의 패널에 드릴 다운을 추가하였고 아래와 같은 대시보드를 완성하였다.

<11_8.png>

두 번째 줄의 제목을 보면 '503 상태코드 현황'과 'view 접속 IP 목록'이라고 적혀있다. 
하지만 제목에서 상태코드의 값과 action값은 사용자가 클릭하는 값으로 가변적이어야 한다. 해당 값을 포함한 변수를 제목에서 사용할 수 있다.
편집모드에서 패널의 제목을 다음과 같이 입력하면 된다. 

<11_9.png>

모든게 완성되면 대시보드를 새로이 로딩해보자. 

<11_10.png>

첫 줄의 패널은 검색어가 동작해서 값을 보여주지만 두 번째 줄의 패널들은 검색어가 완성되어 있지 않아서 값을 보여주지 못한다.
더구나 제목에는 $d_status$와 같은 변수가 그대로 보인다. 정상적인 원리이지만 사용자들은 대시보드가 동작하는지 의문을 가질 수 있다.
이때 XML 태그 옵션을 이용해서 처음에는 보이지 않게 하다가 검색어가 완성되었을 때만 패널을 보여주면 어떨까? 
사용자는 대시보드가 사용자의 입력에 상호작용하는 것으로 인식되어 대시보드 정보를 제공하는데 더 효과적이다. 
아쉽게도 이 방법은 UI에서 설정할 수 없다. 대시보드의 편집모드에서 XML 소스코드를 수정해야 한다. 편집 모드로 들어가서 Source를 선택한다. 

<11_11.png>

이제까지 UI 화면에서 손쉽게 설정을 했지만 사실은 Splunk가 모두 XML 태그로 자동 변환을 해주는 것이었다. 
XML 태그를 모른다고 걱정하지 않아도 된다. 태그의 내용은 대단히 직관적이다. <row> </row> 태그는 대시보드 내에서 줄바꿈을 의미한다. 
우리가 작성한 대시보드는 두 줄이 있었으므로 <row> 태그의 쌍이 두 번 나와야 한다. 
첫 번째 줄에서는 패널이 하나 있고, 두 번째 줄에서는 패널이 두 개가 있다. 
우리가 원하는 방식은 첫 번째 패널에서 값을 선택하면 두 번째 줄의 첫 번째 패널이 그려져야 한다. 이 패널을 찾아보자. 

<11_12.png>

<row><panel><title> 순으로 태그가 진행된다. 핵심은 다음 태그인 <chart>이다. Splunk의 대시보드의 차트는 모두 이 태그에서 동작한다.
표 형식의 데이터는 <table>로 보여진다. 우리가 원하는 것은 <chart> 태그가 드릴 다운에 의해서만 동작해야 한다는 말이다.
다음 내용을 chart 태그에 입력한다. 

<chart depends="$d_status$">

이 내용은 이 차트 태그는 $d_status$ 변수에 종속적이라는 내용이다. 두 번째 패널 역시 이와 유사하게 추가하도록 하자. 
두 번째 패널은 차트가 아닌 테이블 형식으로 데이터를 보여준다. 그러므로 <table> 태그를 찾아야 한다. 

<11_13.png>

<table depends="$d_action$">

두 번째 패널은 $d_action$태그에 반응하도록 설정하였다. 태그를 입력하고 문법 오류가 없다면 Splunk는 다음의 문구를 보여준다.

<11_14.png>

일부러 오류를 만들었을 때 Splunk XML 편집기가 어떻게 반응하는지 살펴보자. depends 옵션을 dapends로 변경해보자.

<11_15.png>

오류가 발생한 줄을 보여주어서 사용자의 주의를 환기시키고 있다. 오류를 바로 잡고 UI 버튼을 클릭해보자. 
이제 depends 옵션을 준 패널이 굵은 점선으로 감싸있는 것을 볼 수 있다. 이것은 패널이 특정 값이 설정되었을 때만 나타나는 패널이라는 표시이다. 

<11_16.png>

여기까지 하면 모든 설정이 완료된 것이다. 저장 버튼을 클릭해서 대시보드를 보자. 
대시보드를 새로 읽어들이면 500계열 오류 패널 하나만 보인다. 이후 상태코드 값을 클릭하면 해당 코드에 대한 동향 차트가 그려진다.
이후 동향 차트에서 값을 선택하면 상세 접속 목록이 나타난다. 
Splunk에서는 많은 코딩이 없어도 이렇게 훌륭한 대시보드를 만들 수 있다. 대시보드 동작을 잘 이해하기 위해서 동작 방식을 동영상으로 첨부한다.
