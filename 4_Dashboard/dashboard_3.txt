오늘은 어제 만들었던 대시보드에 더 많은 패널을 추가해서 대시보드를 작성해보자. 

어제 마지막에 소개한 대시보드는 다음과 같다. 대시보드는 총 세 줄로 구성되어 있다. 첫 줄은 네 개의 칼럼이 있고 두 번째와 세 번째 줄은 하나의 패널이 있다.
Splunk 대시보드에서 줄에 추가하는 패널의 수는 제약이 없다. 다만 너무 많은 패널은 가독성을 떨어뜨릴 수 있으므로 모니터 해상도에 맞춰서 추가하면 된다.

이제까지 시각화 방법은 막대형, 원형, 꺾은선형을 소개했다. 오늘은 Single Value라는 시각화 기법을 소개한다. 
대시보드의 첫 줄에 나타난 큰 숫자를 보여주는 방식이다. 전체 숫자, 평균 등 하나의 값을 보여줄 때 사용한다.   
예제 대시보드에서는 상태코드를 기준으로 각 상태코드별 개수를 보여주는 검색어를 추가하였다.
앞에서 살펴보았듯이 HTTP 상태코드는 200계열, 300계열, 400계열, 500계열이 존재한다. 상태코드 400은 400이라는 값이 아니라 400번대 상태 코드를 얘기한다. 
즉, 401, 402, 403, 404 등을 말하는 것이다. 상세 상태코드를 모두 보여주는 것은 대시보드가 너무 많은 정보를 제공하므로 직관적이지 못하다. 
그렇기 때문에 첫 화면에서는 400번대, 500번대를 보여주고 상세정보는 그 다음 페이지에서 보여주는 방식을 권고한다. 
Splunk는 대시보드에서 상세한 정보를 보기 위해 drill down이라는 기능을 제공한다. 이 역시 고급 대시보드 구성에서 설명할 계획이다.

우선 상태코드 200 패널을 만들어보자.  검색에 익숙한 사용자라면 바로 알아차리겠지만 200, 300 등의 검색은 상태코드를 제외하는 모든 검색어가 동일하다. 
그러므로 검색어를 하나 만들었다면 이후에는 복사해서 사용할 수 있다. 우리가 얻어야 하는 통계는 다음과 같다.

상태코드가 200인 모든 접속의 수

우선 시간 범위는 편의상 전체 시간으로 설정한다. 관리자가 필요하다면 최근 24시간, 최근 7일 등으로 언제든지 설정할 수 있다.

index=book sourcetype="access_combined_wcookie" status=200
| stats count(ip)

상태코드 값이 있는 필드는 이벤트에서 status이다. 그리고 그 값이 200이라면 status=200이라는 검색어를 추가한다.
필드를 지정하지 않고 200이라는 숫자를 입력하면 Splunk는 200을 문자열로 해석할 수도 있다. 웹 주소에 200이라는 문자열이 포함되어 있다면 주소를 검색결과로 반환한다.
이것은 우리가 원하는 검색 결과가 아니다. 그러므로 검색은 필드값을 기준으로 찾아야 한다.
위의 검색은 상태코드가 200이라는 값인 이벤트들을 반환한다. 상태코드 200은 웹 서버가 클라이언트의 요청에 정상적으로 동작했음을 알려준다. 
200 계열은 다른 값이 나오는 경우가 거의 없다. 하지만 다른 상태코드는 조금 다르다. 
예를 들어 400계열은 400보다는 403, 404 상태코드가 웹 서버 로그에 더 많이 나타난다. 그렇다면 400계열을 모두 찾으려면 어떤 검색어를 사용해야 할까?
우리는 400이 직관적으로 숫자로 받아들인다. 하지만 컴퓨터는 변수에서 문자와 숫자를 엄격히 구분한다. 즉, 400이 숫자일수도 있고 문자일수도 있다는 말이다.
Splunk는 비교대상인 값이 문자인지 숫자인지는 그때 그때 자동으로 판단해서 비교를 한다. Splunk에서 400 계열을 찾는 방법은 두 가지 방법이 있다.
우선 문자열로 찾는 다면 400계열은 4로 시작하는 문자열을 찾을 수 있다. 4로 시작하고 나머지는 모든 값을 다 찾는 방법은 무엇일까? 
와일드카드인 *을 사용하면 된다. 
status = "4*"
이렇게 하면 status 필드에 4로 시작하는 값을 찾는다. 또 다른 방식은 값이 숫자라고 생각해서 찾는 방식이다. 400부터 499까지가 우리가 찾는 값이다.

(status >= 400 AND status < 500)

이 검색어는 400보다 같거나 크지만 500보다는 작은 결과를 반환한다.  AND 검색이므로 양쪽의 조건을 모두 만족해야 한다. 
다시 한 번 말하지만 Splunk의 논리연산자인 AND, OR, NOT은 반드시 대문자로 입력해야 한다. 그리고 논리연산자를 사용하면 혼선을 막기 위해서 ()로 묶어주는 것이 좋다.
이제 200, 300, 400, 500 관련 검색어를 모두 만들 수 있다. 

index=book sourcetype="access_combined_wcookie" status="200"
| stats count(clientip)

index=book sourcetype="access_combined_wcookie" status="3*"
| stats count(clientip)

index=book sourcetype="access_combined_wcookie" status="4*"
| stats count(clientip)

index=book sourcetype="access_combined_wcookie" status="5*"
| stats count(clientip)

패널이 네 개이므로 각각의 패널을 독립적으로 생성해야 한다. 어제 만들었던 대시보드에 이 패널들을 추가해보자. 
작성한 대시보드에서 오른쪽의 편집 버튼을 클릭해서 편집모드로 들어간다. 

패널을 추가할 것이므로 "+패널 추가"를 선택한다.
1. 새로 만들기 -> Sing Value를 선택한다.
2. 시간은 전체 시간으로 설정한다.
3. 콘텐츠 제목은 "상태코드 200계열"을 입력한다.
4. 검색문자열에 상태코드가 200인 이벤트를 찾는 검색어를 넣는다. 
5. 대시보드에 추가 버튼을 클릭한다. 

추가된 패널은 대시보드의 가장 밑에 추가된다. 그림과 같은 대시보드를 만들려면 패널의 위치를 변경해야 한다. 
마우스를 패널 위에있는 두 줄의 점선으로 이동해보자. 마우스 커서가 사방이 화살표인 아이콘으로 변할 것이다. 
마우스로 클릭한 상태로 패널은 원하는 곳으로 이동하면 된다. 현재 있는 원형 차트의 위로 방금 만든 패널을 이동시켜보자. 
이동한 후의 화면 배치는 다음과 같다. 


이제 300 계열, 400계열, 500계열을 추가로 만들어서 똑같은 방법으로 패널을 이동시킬 수 있다. 
그런데 이렇게 검색어만 아주 조금 다르고 동일한 시각화를 계속 반복적으로 입력하는 것은 비효율적으로 보인다. 
간단한 팁을 하나 제공한다. 지금까지는 UI 기반에서 작업을 했는데 간단히 XML 소스를 고쳐서 쉽게 패널을 추가해보자. 
편집 창에서 Source를 클릭한다. 이제 익숙한 UI 화면이 아니라 XML 소스 코드 편집기가 보인다. 

<dashboard>
  <label>상태코드 현황</label>
  <row>
    <panel>
      <single>
        <title>상태코드 200계열</title>
        <search>
          <query>index=book sourcetype="access_combined_wcookie" status="200"
| stats count(clientip)</query>
          <earliest>0</earliest>
          <latest></latest>
        </search>
        <option name="drilldown">none</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <search>
          <query>index=book sourcetype="access_combined_wcookie" 
| top showperc=f status</query>
          <earliest>0</earliest>
          <latest></latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
      </chart>
    </panel>
  </row>
</dashboard>

현재까지 작성한 대시보드의 XML 코드는 위와 같다. XML에 익숙하지 않더라도 쉽게 파악이 가능하다. <row></row> 태그가 총 두 개가 보인다. 
즉 두 줄이 존재한다는 것이다. 앞의 대시보드에서는 첫 번째 줄에 네 개의 패널이 존재했었다. <panel></panel> 태그가 하나의 패널을 보여준다. 
다음 순서대로 패널을 복사한다. 

1. <panel> 부터 </panel>을 블럭으로 설정한다.
2. 설정한 블럭을 복사하고 </panel> 밑에 붙여넣기를 한다.
3. <title> 태그 값을 "상태코드 200계열"에서 "상태코드 300계열"로 수정한다.
4. <query> 태그 값을 status="200"에서 status="3*"으로 수정한다.
5. 4까지 동일한 방식으로 상태코드 400과 500을 모두 복사하고 수정한다.
6. 수정을 완료했으면 다시 UI로 선택한다.
7. 저장 버튼을 클릭한다. 

지금까지 작성한 대시보드는 아래와 같다. 

마지막 패널은 날짜별로 전체 접속자 수를 보여주는 패널이다. 그렇다면 일자별 전체 접속수를 더해서 보여주는 검색어를 작성해야 한다.
복잡하게 생각할 필요는 없다. Splunk는 이벤트를 수집할 때 시간정보를 자동으로 파싱해서 날짜 관련 정보를 구분하는 필드를 자동으로 생성한다. 다음의 필드들이다.

date_year : 연도
date_month : 월
date_mday : 일
date_wday : 요일
date_hour : 시간
date_minute : 분
date_secode : 초

그러므로 같은 날의 이벤트는 date_mday의 값이 모두 같다. 그러면 date_mday를 기분으로 전체 숫자를 세면 될 것이다. 

index=book sourcetype="access_combined_wcookie" 
| stats count(clientip) by date_mday
| sort date_mday

위의 검색어는 모든 접속지의 숫자를 날짜별로 반환한다. 그리고 우리가 원하는 것은 날짜가 X축 정보일때 왼쪽에서 오른쪽으로 증가하는 것을 바랄것이다. 
이때는 날짜를 기준으로 정렬을 수행하면 된다. sort date_mday는 date_mday필드의 값을 오름차순으로 정렬한다는 의미이다.
만일 날짜를 내림차순으로 정렬하고 싶다면 sort - date_mday로 검색어를 작성한다. 이제 마지막 패널을 추가해보자.

1. 검색어를 작성했으므로 대시보드의 편집모드로 들어간다. 그리고 패널 추가를 클릭한다. 
2. 패널추가->새로만들기->Column Chart를 선택한다.
3. 시간은 전체 시간으로 설정한다. 
4. 콘텐츠 제목은 "일별 접속 현황"을 입력한다.
5. 미리 작성한 검색 문자열을 입력한다. 
6. 대시보드에 추가 버튼을 클릭한다. 
7. 대시보드의 마지막에 추가된 막대형 차트를 확인한다. 
8. 저장 버튼을 클릭한다. 

축하한다. 어제 미리 살펴본 대시보드를 모두 완성했다. 전문 차트 도구를 사용하고 데이터베이스에 연결해서 SQL문을 프로그래밍하는 것보다 훨씬 쉬운 방법으로 대시보드를 작성했다.
다음 시간에는 대시보드에 가독성을 높이는 방안을 살펴보겠다. 