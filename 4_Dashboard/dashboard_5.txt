대시보드 - 5

지금까지 만든 대시보드는 사용자가 검색어를 지정하고 대시보드를 열때 자동으로 결과를 보여줬다. 
하지만 이런 대시보드는 데이터를 정적으로 보여주는 한계가 있다.  즉, 지정한 데이터를 확인하는 용도로만 사용이 가능하다. 
그렇다면 새로운 검색 결과를 대시보드로 확인하고 싶다면 검색을 새로 만들고 대시보드 패널을 신규로 추가하는 방법밖에 없을까?

오늘 살펴볼 내용은 이 한계를 극복하기 위한 방법이다. Splunk는 대시보드에 다양한 입력컨트롤을 사용해서 사용자와 소통할 수 있는 대시보드를 제작할 수 있게 했다.
게시판 검색을 생각해보자. 일반적으로 사용자들은 게시판에서 게시자, 제목, 글 내용 등을 선택한 다음에 찾고자 하는 단어를 넣고 검색을 한다. 
해당 기능이 동작하는 이유는 게시판 제작자가 선택한 영역에 맞는 검색을 프로그램으로 작성해서 기능으로 넣었기 때문이다. 
Splunk는 이런 동작을 관리자가 코딩 한 줄없이 동작할 수 있도록 만들었다. 이 기능은 매우 강력한 기능이며 익숙해지면 웹어플리케이션 수준으로 대시보드를 확장시킬 수 있다.

대시보드 입력 컨트롤

Splunk 대시보드에서 사용할 수 있는 입력컨트롤은 웹 프로그래밍에서 사용하는 컨트롤과 동일하다. 아래 그림을 살펴보자.
<그림 5_1>

텍스트 : 사용자로부터 입력을 받는 용도로 사용한다. 
라디오 : 사용자의 선택을 입력받는다. 라디오 형식은 그룹에서 반드시 1개만 선택이 된다.
드롭다운 : 목록을 만들고 사용자가 선택할 수 있게 한다. 한 개의 목록만 선택할 수 있다.
체크박스 : 사용자의 선택을 입력받는다. 라디오 형식과 달리 1개 이상을 동시에 선택할 수 있다.
다중선택 : 드롭다운과 유사하지만 여러 개를 선택할 수 있다는 점이 다르다.
링크 리스트 : HTML 링크를 만들 수 있다.
시간 : Splunk의 시간 선택자 컨트롤이다. 검색 앱에서 사용하는 시간 선택 메뉴와 완전히 동일하다.
제출 : 데이터를 입력하고 서버로 전송할 때 사용하는 버튼이다.

웹 프로그래밍과 동일한 효과를 내지만 HTML, XML 코딩은 필요하지 않다. 각 컨트롤은 설정 부분이 대부분 동일하다.

텍스트 입력 컨트롤
<그림 5_2>
편집모드에서 입력추가 버튼을 클릭하고 텍스트를 선택하자. 컨트롤에서 연필모양의 버튼이 설정메뉴이다. 

일반 - 레이블 : 컨트롤의 이름을 지정한다. 사용자가 알아보기 쉽게 작성하자.
변경 사항 검색 : 이 옵션을 선택하지 않으면 제출 버튼을 클릭하기 전에는 검색이 실행되지 않는다. 
              옵션을 선택하면 사용자가 값을 입력하는 순간 이벤트가 발생해서 즉시 검색을 실행한다.
토큰 옵션 - 토큰 : 컨트롤의 이름이다. Splunk에서 이름은 변수명으로 사용된다. 토큰은 한글로 작성할 수 있다. 
        기본값 : 입력시 설정되는 기본값이다.
        초기값 : 페이지 로딩시 설정되는 값이다.
        토큰 접두사와 접미사는 입력값의 앞이나 뒤에 붙이는 값이다. 그다지 많이 사용하지는 않는다.

텍스트 컨트롤이 완성되었다. 이제 사용자가 입력한 값을 검색 대시보드에 연결시켜보자. 
검색은 해당 컨트롤의 값을 가지고 검색하면 동적 검색이 활성화된다. 사용자가 컨트롤에 입력한 값은 토큰명을 $로 감싸면 된다. 
컨트롤의 토큰명은 stat_code였으므로 $stat_code$가 입력한 값을 나타내는 변수로 동작한다. 

이제 컨트롤과 검색을 연결시켜 보자. 

1. 어제 만들었던 대시보드를 다시 선택하고 편집모드로 들어가자.
2. 제일 아래에 있는 일별 접속 현황 그래프를 대시보드의 제일 위로 이동시킨다.
3. 돋보기 모양의 아이콘을 눌러서 검색 편집창을 띄운다.
4. 검색 문자열 첫 줄 마지막에 status=$stat_code$를 추가한다. 
index=book sourcetype="access_combined_wcookie" status=$stat_code$
| stats count(clientip) by date_mday
| sort date_mday
5. 적용을 클릭한다.

4번에서 추가한 검색어는 status=$stat_code$이다. 즉, status필드가 사용자 입력값과 같은 데이터를 찾는 검색어인 것이다.
상태코드 입력창에 200을 입력하고 제출을 클릭해보자. 결과는 아래와 같다.
<그림 5_3> 
어제 만들었던 다음 대시보드와 비교해보자. 데이터 수가 다른 것을 알 수 있다.
<그림 5_4>

그런데 이렇게 텍스트 입력을 받아서 검색을 하면 문제가 하나 있다. 눈치가 빠른 독자라면 금새 눈치를 차렸겠지만 전체 데이터를 표현을 어떻게 하느냐이다.
Splunk 검색을 이해한다면 생각보다 쉽다. 전체 값을 의미하는 와일드 카드(*)를 사용하면 된다. 텍스트 입력창에 *을 입력하고 제출 버튼을 클릭해보자.
이제 특별한 조건을 주지 않은 전체 데이터가 보인다. 텍스트 입력은 이런 방식으로 사용한다.

조금 더 발전시켜보자. 텍스트 입력은 사용자가 어떤 값이라도 입력하는 것을 받아들인다. 하지만 불행히도 사용자의 입력은 정확하지 않다. 
상태코드를 예제로 생각해보자. 상태코드는 200, 300 등 세 자리 숫자로입력한다. 그리고 485와 같이 세 자리 숫자라고 모두 상태코드로 사용되지는 않는다.
우리가 가장 많이 보는 상태코드는 200, 301, 302, 403, 404, 500 정도이다. 그렇다면 이렇게 입력 자체를 제한한다면 검색 효율성이 높아질 것이다.
사용자의 입력을 애초부터 차단하고 정형화하면 프로그램 안정성이 더 높아지기 때문이다. 

다음 번에는 드롭다운과 다중 선택을 활용해보자. 두 컨트롤의 사용자의 입력을 관리자가 지정한 값에서만 선택하게 함으로써 오류를 줄여주는 효과가 있다.