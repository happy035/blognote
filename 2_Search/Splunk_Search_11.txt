검색 최적화
지금까지 기본적인 검색 및 통계에 대해서 살펴보았다. 검색은 Splunk 사용의 전부라고 해도 과언이 아니다. 
방대한 데이터에서 원하는 값을 빨리 찾는 것이 Splunk와 같은 프로그램들이 추구하는 궁극적인 목적이기 때문이다. 
그렇다면 어떻게 검색어를 작성해야 사용자가 원하는 값을 조금이라도 빨리 찾을 수 있을까?
이 장에서는 검색 최적화에 대해서 알아본다. 
검색 최적화란 최대한 효과적으로 검색을 수행하여 검색에 소요되는 비용을 줄이고 원하는 값을 빨리 얻어내는 방법이다. 
최적화를 시키지 않은 검색은 시스템에서 오래 실행되기 때문에 결과를 얻는데 더 많은 시간을 소모한다. 
이러한 검색들이 누적되면 결국 전체 Splunk 시스템의 성능이 저하될 수 있다. 
이를 방지하기 위해서 Splunk는 몇 가지 검색 최적화 원칙을 제시하고 있다. 

- 알맞은 시간 범위 설정
- 필요한 데이터만 검색
- 많은 작업 병렬 처리

이러한 원칙을 만족하려면 검색을 다음과 같이 실행해야 한다. 

구체적인 검색어를 사용하기
Splunk는 입력된 검색어를 AND로 연결해서 데이터를 찾는다. 
즉, 많은 검색어를 넣을수록 그 검색어가 모두 포함된 이벤트를 반환하므로 검색이 정교해질 수 있다. 

검색결과 이벤트 수를 제한하기
검색 결과가 얼마나 필요한지 사전에 정의하고 head같은 사용하면 결과 개수 조절이 가능하다. 
| head 100이면 검색 결과에서 100개만 보여준다. top 명령어에서도 limit=#를 이용해서 출력결과 이벤트를 제한할 수 있다. 
top 명령어에서 limit의 기본값은 10이다. 

부정보다 긍정 검색어를 사용하기(NOT Error 보다는 Success로 검색)
Splunk는 부정 검색어로 NOT과 !=를 제공한다. 같지 않은 검색을 검색하는 면에서 비슷하게 보일 것 같지만 두 연산자의 검색결과는 완전히 다르다. 
아래와 같은 데이터 원본이 있다.  

NOT 필드1=값1 이라는 검색어를 사용하면 사용자가 없는 검색 결과는 다음과 같다. 
필드 1의 값이 1이 아닌 모든 값을 반환한다. 이것은 필드1에서 값1이 아닌것도 포함된다. 

Splunk는 필드1=값1이 아닌 모든 필드값을 반환한다. 즉, 필드2, 필드3도 필드1이 아니기 때문에 검색결과로 반환되는 것이다.

필드1!=값1이라는 검색어를 사용하면 검색결과는 다음과 같다. 

필드1에서 값1이 아닌 결과만 반환한다. 즉, 검색대상이 필드1로 제한되는 것이다. 

NOT과 !=에 대한 차이를 설명했지만 이 검색어는 필요할 때만 사용하는 것이 바람직하다.

검색 결과에서 불필요한 필드 필터링
필드 추출은 Splunk 검색에서 많은 리소스를 점유한다. 그러므로 검색 결과에서 필요한 필드가 아니면 제거하는 것이 낫다. 
field 명령어를 사용하려면 반드시 필드 추출을 통해서 필드가 사전에 정의되어 있어야 한다. 
결과에서 사용하지 않는 필드는 fields - [필드명]을 사용해서 제거할 수 있다. 제거 역시 검색어의 앞부분에서 실시해야 한다.
계산 명령어 앞에 필터링 명령어를 사용하기(eval이나 stats는 문자열 조작, 통계 등 계산 결과를 반환한다. 
이런 계산 결과 전에 필드를 필터링하면 계산되는 필드 개수를 줄일 수 있어서 계산에 소요되는 시간을 줄일 수 있다.

최적화를 위한 간단한 팁
여기에서 설명하는 팁들은 Splunk 공식 매뉴얼에서 제시하는 방식을 필자가 요약해서 제공하는 것이다. 제조사의 매뉴얼만큼 강력하고 확실한 문서는 없다. 
IT 담당자라면 매뉴얼을 읽는 습관을 가져야 한다. 

고속 검색의 핵심은 디스크에 저장된 데이터를 가져올때 최소한으로 가져오는 것이다. 최소한 데이터를 가져오려면 가져오는 데이터를 필터링해야 한다.

<<디스크에서 가져오는 데이터의 제한>>

검색 기간 좁히기
시간범위를 제한하면 디스크에서 가져오는 데이터를 가장 효과적으로 필터링할 수 있다. 막연히 지난 24시간, 지난 1주일 등을 지정하는 것보다 시간 범위를 명확히 하는 것이 좋다. 

인덱스, source 또는 sourcetype 지정
찾을 데이터가 저장된 인덱스를 지정하지 않고 검색을 하는 경우를 상상할 수 있을까? Splunk가 키워드로만으로도 검색이 가능하기 때문에 의외로 많은 사용자들이 검색용 단어만 입력한다. 
하지만 이는 검색 속도를 현저히 떨어뜨리는 큰 원인중의 하나이다. 내가 원하는 데이터가 저장된 인덱스는 당연히 알아야 하고 sourcetype을 지정해야 원하는 필드 형식을 얻을 수 있다. 

구체적으로 검색하기
원하는 검색어를 정확하게 입력하는 습관을 들여야 한다. Splunk는 검색의 편의를 위해서 와일드카드(*)를 제공한다. 
물론 검색어의 일부분만 알고 있는 경우에 와일드카드는 매우 유용하다. 다만, 무분별한 와일드카드의 사용은 검색 속도 뿐만 아니라 시스템 성능 저하의 원인이 될 수 있다.

status = 4* OR status=5* 
이 방식보다 구체적으로 검색하자. 
status = 404 OR status = 500

검색하는 이벤트 수 제한
전체 이벤트가 아니라 일부만을 보려면 head를 사용해서 이벤트 수를 제한할 수 있다. 

sourcetype=apache_access_log | head 100

이 검색어는 전체 이벤트에서 100개만을 보여준다. 그렇다면 어떤 100개를 보여주는지 의문이 생길 것이다. Splunk는 기본적으로 가장 최근 이벤트를 먼저 보여준다. 
그러므로 head 100개는 가장 최근 데이터 100개를 보여준다. 

NOT 사용 자제
앞에서 NOT과 !=의 차이를 설명하였다. 검색은 부정보다는 긍정으로 검색하는 것이 시스템 리소스를 적게 사용한다. 

NOT error ==> success
NOT server ==> desktop 

데이터의 제한 방법을 사용해서 검색 속도를 높이는 방법을 살펴보았다. 다음에는 필터링 기법을 이용하여 검색을 최적화하는 방법을 알아본다. 
